name: TELE-MLOPS CI/CD 

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - '**'

jobs:
  build-and-deploy:
    name: Build → Push → Deploy to EC2
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set Up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Docker Images
        run: |
          docker compose build

      - name: Tag and Push Images
        run: |
          docker tag anuragraj03/tele_mlops/custom-airflow:latest anuragraj03/tele_mlops:custom-airflow
          docker tag anuragraj03/tele_mlops/backend_process:latest anuragraj03/tele_mlops:backend_process
          docker tag anuragraj03/tele_mlops/frontend_run:latest anuragraj03/tele_mlops:frontend_run
          docker tag anuragraj03/tele_mlops/src_run:latest anuragraj03/tele_mlops:src_run
          docker tag anuragraj03/tele_mlops/llm_run:latest anuragraj03/tele_mlops:llm_run
          docker tag anuragraj03/tele_mlops/drift_detector_run:latest anuragraj03/tele_mlops:drift_detector_run
          

          docker push anuragraj03/tele_mlops:custom-airflow
          docker push anuragraj03/tele_mlops:backend_process
          docker push anuragraj03/tele_mlops:frontend_run
          docker push anuragraj03/tele_mlops:src_run
          docker push anuragraj03/tele_mlops:llm_run
          docker push anuragraj03/tele_mlops:drift_detector_run
          

      - name: Deploy to EC2 via SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            set -e

            # Install Docker if not present
            if ! command -v docker &> /dev/null; then
              echo "Docker not found. Installing..."
              sudo apt update
              sudo apt install -y docker.io
              sudo systemctl enable --now docker
              sudo usermod -aG docker $USER
            fi

            # Install docker-compose if not present
            if ! command -v docker-compose &> /dev/null; then
              echo "docker-compose not found. Installing..."
              sudo apt install -y docker-compose
            fi

            # Clean up disk space to resolve "no space left on device"
            echo "Cleaning up disk space..."
            docker system prune -af
            sudo rm -rf /var/lib/apt/lists/*

            # Navigate to deployment directory
            cd ~/Bank_Customer_Subscription_MLOPS || {
              echo "Cloning repository for the first time..."
              git clone https://github.com/Anurag-raj03/Bank_Customer_Subscription_MLOPS.git
              cd Bank_Customer_Subscription_MLOPS
            }

            # Pull latest code
            echo "Pulling latest code..."
            git fetch --all
            git reset --hard origin/main

            # Log in to Docker Hub
            echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

            # Build updated images from code
            echo "Building Docker images..."
            docker-compose build

            # Restart containers
            echo "Restarting containers..."
            docker-compose down
            docker-compose up -d --remove-orphans