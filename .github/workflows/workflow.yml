name: TELE-MLOPS CI/CD

on:
  push:
    branches:
      - 'main'

jobs:
  build-and-deploy:
    name: Build → Push → SCP → Deploy on EC2
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set Up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Docker Images
        run: |
          docker compose build

      - name: Tag and Push Images
        run: |
          docker tag anuragraj03/tele_mlops/custom-airflow:latest anuragraj03/tele_mlops:custom-airflow
          docker tag anuragraj03/tele_mlops/backend_process:latest anuragraj03/tele_mlops:backend_process
          docker tag anuragraj03/tele_mlops/frontend_run:latest anuragraj03/tele_mlops:frontend_run
          docker tag anuragraj03/tele_mlops/src_run:latest anuragraj03/tele_mlops:src_run
          docker tag anuragraj03/tele_mlops/llm_run:latest anuragraj03/tele_mlops:llm_run
          docker tag anuragraj03/tele_mlops/drift_detector_run:latest anuragraj03/tele_mlops:drift_detector_run

          docker push anuragraj03/tele_mlops:custom-airflow
          docker push anuragraj03/tele_mlops:backend_process
          docker push anuragraj03/tele_mlops:frontend_run
          docker push anuragraj03/tele_mlops:src_run
          docker push anuragraj03/tele_mlops:llm_run
          docker push anuragraj03/tele_mlops:drift_detector_run

      - name: Upload docker-compose.yml to EC2
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          source: "docker-compose.yml"
          target: "~/Bank_Customer_Subscription_MLOPS"

      - name: Deploy on EC2 via SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            set -e

            cd ~/Bank_Customer_Subscription_MLOPS

            echo "Ensuring Docker is available..."
            if ! command -v docker &> /dev/null; then
              sudo apt update && sudo apt install -y docker.io
              sudo systemctl enable --now docker
              sudo usermod -aG docker $USER
            fi

            if ! command -v docker-compose &> /dev/null; then
              sudo apt install -y docker-compose
            fi

            echo "Cleaning Docker cache..."
            docker system prune -af || true

            echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

            echo "Pulling latest images..."
            docker pull anuragraj03/tele_mlops:custom-airflow
            docker pull anuragraj03/tele_mlops:backend_process
            docker pull anuragraj03/tele_mlops:frontend_run
            docker pull anuragraj03/tele_mlops:src_run
            docker pull anuragraj03/tele_mlops:llm_run
            docker pull anuragraj03/tele_mlops:drift_detector_run

            echo "Restarting services..."
            docker-compose down
            docker-compose up -d --remove-orphans